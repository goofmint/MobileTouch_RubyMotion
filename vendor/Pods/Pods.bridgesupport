<?xml version='1.0'?>
<signatures version='1.0'>
<struct type='{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}' name='Callback_data'>
<field type='^v' declared_type='void*' name='e_data'/>
<field type='^?' function_pointer='true' declared_type='mkd_callback_t' name='e_url'>
<arg const='true' type='*' declared_type='char*'/>
<arg const='true' type='i' declared_type='int'/>
<arg type='^v' declared_type='void*'/>
<retval type='*' declared_type='char*'/>
</field>
<field type='^?' function_pointer='true' declared_type='mkd_callback_t' name='e_flags'>
<arg const='true' type='*' declared_type='char*'/>
<arg const='true' type='i' declared_type='int'/>
<arg type='^v' declared_type='void*'/>
<retval type='*' declared_type='char*'/>
</field>
<field type='^?' function_pointer='true' declared_type='mkd_free_t' name='e_free'>
<arg type='*' declared_type='char*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
</struct>
<struct type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' name='Cstring'>
<field type='*' declared_type='char*' name='text'/>
<field type='i' declared_type='int' name='size'/>
<field type='i' declared_type='int' name='alloc'/>
</struct>
<struct type='{document=&quot;magic&quot;i&quot;title&quot;^{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}&quot;author&quot;^{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}&quot;date&quot;^{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}&quot;content&quot;{?=&quot;text&quot;^{line}&quot;end&quot;^{line}}&quot;code&quot;^{paragraph=&quot;next&quot;^{paragraph}&quot;down&quot;^{paragraph}&quot;text&quot;^{line}&quot;ident&quot;*&quot;typ&quot;i&quot;align&quot;i&quot;hnumber&quot;i}&quot;compiled&quot;i&quot;html&quot;i&quot;tabstop&quot;i&quot;ref_prefix&quot;*&quot;ctx&quot;^{mmiot=&quot;out&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;in&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;Q&quot;{_Qblock=&quot;text&quot;^{block}&quot;size&quot;i&quot;alloc&quot;i}&quot;isp&quot;i&quot;reference&quot;i&quot;ref_prefix&quot;*&quot;footnotes&quot;^{?}&quot;flags&quot;I&quot;cb&quot;^{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}}&quot;cb&quot;{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}}' name='Document'>
<field type='i' declared_type='int' name='magic'/>
<field type='^{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}' declared_type='Line*' name='title'/>
<field type='^{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}' declared_type='Line*' name='author'/>
<field type='^{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}' declared_type='Line*' name='date'/>
<field type='{_structdocument=&quot;text&quot;^{line}&quot;end&quot;^{line}}' declared_type='struct document::' name='content'/>
<field type='^{paragraph=&quot;next&quot;^{paragraph}&quot;down&quot;^{paragraph}&quot;text&quot;^{line}&quot;ident&quot;*&quot;typ&quot;i&quot;align&quot;i&quot;hnumber&quot;i}' declared_type='Paragraph*' name='code'/>
<field type='i' declared_type='int' name='compiled'/>
<field type='i' declared_type='int' name='html'/>
<field type='i' declared_type='int' name='tabstop'/>
<field type='*' declared_type='char*' name='ref_prefix'/>
<field type='^{mmiot=&quot;out&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;in&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;Q&quot;{_Qblock=&quot;text&quot;^{block}&quot;size&quot;i&quot;alloc&quot;i}&quot;isp&quot;i&quot;reference&quot;i&quot;ref_prefix&quot;*&quot;footnotes&quot;^{?}&quot;flags&quot;I&quot;cb&quot;^{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}}' declared_type='MMIOT*' name='ctx'/>
<field type='{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}' declared_type='Callback_data' name='cb'/>
</struct>
<struct type='{footnote=&quot;tag&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;link&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;title&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;height&quot;i&quot;width&quot;i&quot;dealloc&quot;i&quot;refnumber&quot;i&quot;flags&quot;i}' name='Footnote'>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='tag'/>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='link'/>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='title'/>
<field type='i' declared_type='int' name='height'/>
<field type='i' declared_type='int' name='width'/>
<field type='i' declared_type='int' name='dealloc'/>
<field type='i' declared_type='int' name='refnumber'/>
<field type='i' declared_type='int' name='flags'/>
</struct>
<struct type='{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}' name='Line'>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='text'/>
<field type='^{line={?=*ii}^{line}iiii}' declared_type='struct line*' name='next'/>
<field type='i' declared_type='int' name='dle'/>
<field type='i' declared_type='int' name='flags'/>
<field type='i' declared_type='enum line::' name='kind'/>
<field type='i' declared_type='int' name='count'/>
</struct>
<struct type='{mmiot=&quot;out&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;in&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;Q&quot;{_Qblock=&quot;text&quot;^{block}&quot;size&quot;i&quot;alloc&quot;i}&quot;isp&quot;i&quot;reference&quot;i&quot;ref_prefix&quot;*&quot;footnotes&quot;^{?}&quot;flags&quot;I&quot;cb&quot;^{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}}' name='MMIOT'>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='out'/>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='in'/>
<field type='{_Qblock=&quot;text&quot;^{block}&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Qblock' name='Q'/>
<field type='i' declared_type='int' name='isp'/>
<field type='i' declared_type='int' name='reference'/>
<field type='*' declared_type='char*' name='ref_prefix'/>
<field type='^{_structmmiot=^{footnote}ii}' declared_type='struct mmiot::*' name='footnotes'/>
<field type='I' declared_type='unsigned int' name='flags'/>
<field type='^{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}' declared_type='Callback_data*' name='cb'/>
</struct>
<struct type='{paragraph=&quot;next&quot;^{paragraph}&quot;down&quot;^{paragraph}&quot;text&quot;^{line}&quot;ident&quot;*&quot;typ&quot;i&quot;align&quot;i&quot;hnumber&quot;i}' name='Paragraph'>
<field type='^{paragraph=^{paragraph}^{paragraph}^{line}*iii}' declared_type='struct paragraph*' name='next'/>
<field type='^{paragraph=^{paragraph}^{paragraph}^{line}*iii}' declared_type='struct paragraph*' name='down'/>
<field type='^{line={?=*ii}^{line}iiii}' declared_type='struct line*' name='text'/>
<field type='*' declared_type='char*' name='ident'/>
<field type='i' declared_type='enum paragraph::' name='typ'/>
<field type='i' declared_type='enum paragraph::' name='align'/>
<field type='i' declared_type='int' name='hnumber'/>
</struct>
<struct type='{_Qblock=&quot;text&quot;^{block}&quot;size&quot;i&quot;alloc&quot;i}' name='Qblock'>
<field type='^{block=iic{?=*ii}{?=*ii}}' declared_type='block*' name='text'/>
<field type='i' declared_type='int' name='size'/>
<field type='i' declared_type='int' name='alloc'/>
</struct>
<struct type='{block=&quot;b_type&quot;i&quot;b_count&quot;i&quot;b_char&quot;c&quot;b_text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;b_post&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}}' name='block'>
<field type='i' declared_type='enum block::' name='b_type'/>
<field type='i' declared_type='int' name='b_count'/>
<field type='c' declared_type='char' name='b_char'/>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='b_text'/>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='b_post'/>
</struct>
<struct type='{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}' name='callback_data'>
<field type='^v' declared_type='void*' name='e_data'/>
<field type='^?' function_pointer='true' declared_type='mkd_callback_t' name='e_url'>
<arg const='true' type='*' declared_type='char*'/>
<arg const='true' type='i' declared_type='int'/>
<arg type='^v' declared_type='void*'/>
<retval type='*' declared_type='char*'/>
</field>
<field type='^?' function_pointer='true' declared_type='mkd_callback_t' name='e_flags'>
<arg const='true' type='*' declared_type='char*'/>
<arg const='true' type='i' declared_type='int'/>
<arg type='^v' declared_type='void*'/>
<retval type='*' declared_type='char*'/>
</field>
<field type='^?' function_pointer='true' declared_type='mkd_free_t' name='e_free'>
<arg type='*' declared_type='char*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
</struct>
<struct type='{document=&quot;magic&quot;i&quot;title&quot;^{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}&quot;author&quot;^{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}&quot;date&quot;^{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}&quot;content&quot;{?=&quot;text&quot;^{line}&quot;end&quot;^{line}}&quot;code&quot;^{paragraph=&quot;next&quot;^{paragraph}&quot;down&quot;^{paragraph}&quot;text&quot;^{line}&quot;ident&quot;*&quot;typ&quot;i&quot;align&quot;i&quot;hnumber&quot;i}&quot;compiled&quot;i&quot;html&quot;i&quot;tabstop&quot;i&quot;ref_prefix&quot;*&quot;ctx&quot;^{mmiot=&quot;out&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;in&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;Q&quot;{_Qblock=&quot;text&quot;^{block}&quot;size&quot;i&quot;alloc&quot;i}&quot;isp&quot;i&quot;reference&quot;i&quot;ref_prefix&quot;*&quot;footnotes&quot;^{?}&quot;flags&quot;I&quot;cb&quot;^{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}}&quot;cb&quot;{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}}' name='document'>
<field type='i' declared_type='int' name='magic'/>
<field type='^{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}' declared_type='Line*' name='title'/>
<field type='^{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}' declared_type='Line*' name='author'/>
<field type='^{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}' declared_type='Line*' name='date'/>
<field type='{_structdocument=&quot;text&quot;^{line}&quot;end&quot;^{line}}' declared_type='struct document::' name='content'/>
<field type='^{paragraph=&quot;next&quot;^{paragraph}&quot;down&quot;^{paragraph}&quot;text&quot;^{line}&quot;ident&quot;*&quot;typ&quot;i&quot;align&quot;i&quot;hnumber&quot;i}' declared_type='Paragraph*' name='code'/>
<field type='i' declared_type='int' name='compiled'/>
<field type='i' declared_type='int' name='html'/>
<field type='i' declared_type='int' name='tabstop'/>
<field type='*' declared_type='char*' name='ref_prefix'/>
<field type='^{mmiot=&quot;out&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;in&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;Q&quot;{_Qblock=&quot;text&quot;^{block}&quot;size&quot;i&quot;alloc&quot;i}&quot;isp&quot;i&quot;reference&quot;i&quot;ref_prefix&quot;*&quot;footnotes&quot;^{?}&quot;flags&quot;I&quot;cb&quot;^{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}}' declared_type='MMIOT*' name='ctx'/>
<field type='{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}' declared_type='Callback_data' name='cb'/>
</struct>
<struct type='{footnote=&quot;tag&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;link&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;title&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;height&quot;i&quot;width&quot;i&quot;dealloc&quot;i&quot;refnumber&quot;i&quot;flags&quot;i}' name='footnote'>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='tag'/>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='link'/>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='title'/>
<field type='i' declared_type='int' name='height'/>
<field type='i' declared_type='int' name='width'/>
<field type='i' declared_type='int' name='dealloc'/>
<field type='i' declared_type='int' name='refnumber'/>
<field type='i' declared_type='int' name='flags'/>
</struct>
<struct type='{kw=&quot;id&quot;*&quot;size&quot;i&quot;selfclose&quot;i}' name='kw'>
<field type='*' declared_type='char*' name='id'/>
<field type='i' declared_type='int' name='size'/>
<field type='i' declared_type='int' name='selfclose'/>
</struct>
<struct type='{line=&quot;text&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;next&quot;^{line}&quot;dle&quot;i&quot;flags&quot;i&quot;kind&quot;i&quot;count&quot;i}' name='line'>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='text'/>
<field type='^{line={?=*ii}^{line}iiii}' declared_type='struct line*' name='next'/>
<field type='i' declared_type='int' name='dle'/>
<field type='i' declared_type='int' name='flags'/>
<field type='i' declared_type='enum line::' name='kind'/>
<field type='i' declared_type='int' name='count'/>
</struct>
<struct type='{mmiot=&quot;out&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;in&quot;{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}&quot;Q&quot;{_Qblock=&quot;text&quot;^{block}&quot;size&quot;i&quot;alloc&quot;i}&quot;isp&quot;i&quot;reference&quot;i&quot;ref_prefix&quot;*&quot;footnotes&quot;^{?}&quot;flags&quot;I&quot;cb&quot;^{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}}' name='mmiot'>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='out'/>
<field type='{_Cstring=&quot;text&quot;*&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Cstring' name='in'/>
<field type='{_Qblock=&quot;text&quot;^{block}&quot;size&quot;i&quot;alloc&quot;i}' declared_type='Qblock' name='Q'/>
<field type='i' declared_type='int' name='isp'/>
<field type='i' declared_type='int' name='reference'/>
<field type='*' declared_type='char*' name='ref_prefix'/>
<field type='^{_structmmiot=^{footnote}ii}' declared_type='struct mmiot::*' name='footnotes'/>
<field type='I' declared_type='unsigned int' name='flags'/>
<field type='^{callback_data=&quot;e_data&quot;^v&quot;e_url&quot;^?&quot;e_flags&quot;^?&quot;e_free&quot;^?}' declared_type='Callback_data*' name='cb'/>
</struct>
<struct type='{paragraph=&quot;next&quot;^{paragraph}&quot;down&quot;^{paragraph}&quot;text&quot;^{line}&quot;ident&quot;*&quot;typ&quot;i&quot;align&quot;i&quot;hnumber&quot;i}' name='paragraph'>
<field type='^{paragraph=^{paragraph}^{paragraph}^{line}*iii}' declared_type='struct paragraph*' name='next'/>
<field type='^{paragraph=^{paragraph}^{paragraph}^{line}*iii}' declared_type='struct paragraph*' name='down'/>
<field type='^{line={?=*ii}^{line}iiii}' declared_type='struct line*' name='text'/>
<field type='*' declared_type='char*' name='ident'/>
<field type='i' declared_type='enum paragraph::' name='typ'/>
<field type='i' declared_type='enum paragraph::' name='align'/>
<field type='i' declared_type='int' name='hnumber'/>
</struct>
<constant type='^c' declared_type='char*' name='markdown_version'/>
<string_constant value='/usr/bin/find' name='PATH_FIND'/>
<string_constant value='/usr/bin/sed' name='PATH_SED'/>
<enum value='2' name='CHECKED'/>
<enum value='0' name='COCOAPODS_VERSION_MAJOR_GHMarkdownParser'/>
<enum value='0' name='COCOAPODS_VERSION_MINOR_GHMarkdownParser'/>
<enum value='1' name='COCOAPODS_VERSION_PATCH_GHMarkdownParser'/>
<enum value='0' name='ETX'/>
<enum value='1' name='EXTRA_BOOKMARK'/>
<enum value='1' name='HAVE_BZERO'/>
<enum value='1' name='HAVE_FCHDIR'/>
<enum value='1' name='HAVE_GETPWUID'/>
<enum value='1' name='HAVE_PWD_H'/>
<enum value='1' name='HAVE_RANDOM'/>
<enum value='1' name='HAVE_SRANDOM'/>
<enum value='1' name='HAVE_STRCASECMP'/>
<enum value='1' name='HAVE_STRNCASECMP'/>
<enum value='196608' name='INPUT_MASK'/>
<enum value='134217728' name='IS_LABEL'/>
<enum value='8192' name='MKD_1_COMPAT'/>
<enum value='16384' name='MKD_AUTOLINK'/>
<enum value='128' name='MKD_CDATA'/>
<enum value='35' name='MKD_EMBED'/>
<enum value='2097152' name='MKD_EXTRA_FOOTNOTE'/>
<enum value='524288' name='MKD_NOALPHALIST'/>
<enum value='262144' name='MKD_NODIVQUOTE'/>
<enum value='1048576' name='MKD_NODLIST'/>
<enum value='64' name='MKD_NOEXT'/>
<enum value='65536' name='MKD_NOHEADER'/>
<enum value='8' name='MKD_NOHTML'/>
<enum value='2' name='MKD_NOIMAGE'/>
<enum value='1' name='MKD_NOLINKS'/>
<enum value='4' name='MKD_NOPANTS'/>
<enum value='512' name='MKD_NORELAXED'/>
<enum value='2048' name='MKD_NOSTRIKETHROUGH'/>
<enum value='256' name='MKD_NOSUPERSCRIPT'/>
<enum value='1024' name='MKD_NOTABLES'/>
<enum value='64' name='MKD_NO_EXT'/>
<enum value='32768' name='MKD_SAFELINK'/>
<enum value='16' name='MKD_STRICT'/>
<enum value='131072' name='MKD_TABSTOP'/>
<enum value='32' name='MKD_TAGTEXT'/>
<enum value='4096' name='MKD_TOC'/>
<enum value='1' name='OS_DARWIN'/>
<enum value='1' name='PIPECHAR'/>
<enum value='2' name='REFERENCED'/>
<enum value='1' name='SETEXT'/>
<enum value='4' name='TABSTOP'/>
<enum value='268435455' name='USER_FLAGS'/>
<enum value='1' name='USE_DISCOUNT_DL'/>
<enum value='425723697' name='VALID_DOCUMENT'/>
<function variadic='true' name='Csprintf'>
<arg type='^{_Cstring=*ii}' declared_type='Cstring*'/>
<arg type='*' declared_type='char*'/>
<retval type='i' declared_type='int'/>
</function>
<function name='Csputc'>
<arg type='i' declared_type='int'/>
<arg type='^{_Cstring=*ii}' declared_type='Cstring*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='Csreparse'>
<arg type='^{_Cstring=*ii}' declared_type='Cstring*'/>
<arg type='*' declared_type='char*'/>
<arg type='i' declared_type='int'/>
<arg type='i' declared_type='int'/>
<retval type='v' declared_type='void'/>
</function>
<function name='Cswrite'>
<arg type='^{_Cstring=*ii}' declared_type='Cstring*'/>
<arg type='*' declared_type='char*'/>
<arg type='i' declared_type='int'/>
<retval type='i' declared_type='int'/>
</function>
<function name='markdown'>
<arg type='^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}' declared_type='MMIOT*'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*'/>
<arg type='I' declared_type='mkd_flag_t'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_basename'>
<arg type='^{document=i^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}{?=^{line}^{line}}^{paragraph=^{paragraph}^{paragraph}^{line}*iii}iii*^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}{callback_data=^v^?^?^?}}' declared_type='Document*'/>
<arg type='*' declared_type='char*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_cleanup'>
<arg type='^{document=i^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}{?=^{line}^{line}}^{paragraph=^{paragraph}^{paragraph}^{line}*iii}iii*^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}{callback_data=^v^?^?^?}}' declared_type='Document*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_compile'>
<arg type='^{document=i^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}{?=^{line}^{line}}^{paragraph=^{paragraph}^{paragraph}^{line}*iii}iii*^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}{callback_data=^v^?^?^?}}' declared_type='Document*'/>
<arg type='I' declared_type='unsigned int'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_css'>
<arg type='^{document=i^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}{?=^{line}^{line}}^{paragraph=^{paragraph}^{paragraph}^{line}*iii}iii*^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}{callback_data=^v^?^?^?}}' declared_type='Document*'/>
<arg type='^*' declared_type='char**'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_deallocate_tags'>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_define_tag'>
<arg type='*' declared_type='char*'/>
<arg type='i' declared_type='int'/>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_doc_author'>
<arg type='^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}' declared_type='MMIOT*'/>
<retval type='*' declared_type='char*'/>
</function>
<function name='mkd_doc_date'>
<arg type='^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}' declared_type='MMIOT*'/>
<retval type='*' declared_type='char*'/>
</function>
<function name='mkd_doc_title'>
<arg type='^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}' declared_type='MMIOT*'/>
<retval type='*' declared_type='char*'/>
</function>
<function name='mkd_document'>
<arg type='^{document=i^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}{?=^{line}^{line}}^{paragraph=^{paragraph}^{paragraph}^{line}*iii}iii*^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}{callback_data=^v^?^?^?}}' declared_type='Document*'/>
<arg type='^*' declared_type='char**'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_dump'>
<arg type='^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}' declared_type='MMIOT*'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*'/>
<arg type='i' declared_type='int'/>
<arg type='*' declared_type='char*'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_e_data'>
<arg type='^v' declared_type='void*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_e_flags'>
<arg type='^v' declared_type='void*'/>
<arg type='^?' function_pointer='true' declared_type='mkd_callback_t'>
<arg const='true' type='*' declared_type='char*'/>
<arg const='true' type='i' declared_type='int'/>
<arg type='^v' declared_type='void*'/>
<retval type='*' declared_type='char*'/>
</arg>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_e_free'>
<arg type='^v' declared_type='void*'/>
<arg type='^?' function_pointer='true' declared_type='mkd_free_t'>
<arg type='*' declared_type='char*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_e_url'>
<arg type='^v' declared_type='void*'/>
<arg type='^?' function_pointer='true' declared_type='mkd_callback_t'>
<arg const='true' type='*' declared_type='char*'/>
<arg const='true' type='i' declared_type='int'/>
<arg type='^v' declared_type='void*'/>
<retval type='*' declared_type='char*'/>
</arg>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_firstnonblank'>
<arg type='^{line={_Cstring=*ii}^{line}iiii}' declared_type='Line*'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_flags_are'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*'/>
<arg type='I' declared_type='mkd_flag_t'/>
<arg type='i' declared_type='int'/>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_generatecss'>
<arg type='^{document=i^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}{?=^{line}^{line}}^{paragraph=^{paragraph}^{paragraph}^{line}*iii}iii*^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}{callback_data=^v^?^?^?}}' declared_type='Document*'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_generatehtml'>
<arg type='^{document=i^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}{?=^{line}^{line}}^{paragraph=^{paragraph}^{paragraph}^{line}*iii}iii*^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}{callback_data=^v^?^?^?}}' declared_type='Document*'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_generateline'>
<arg type='*' declared_type='char*'/>
<arg type='i' declared_type='int'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*'/>
<arg type='I' declared_type='mkd_flag_t'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_generatetoc'>
<arg type='^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}' declared_type='MMIOT*'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_generatexml'>
<arg type='*' declared_type='char*'/>
<arg type='i' declared_type='int'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_in'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*'/>
<arg type='I' declared_type='unsigned int'/>
<retval type='^{document=i^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}{?=^{line}^{line}}^{paragraph=^{paragraph}^{paragraph}^{line}*iii}iii*^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}{callback_data=^v^?^?^?}}' declared_type='Document*'/>
</function>
<function name='mkd_initialize'>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_line'>
<arg type='*' declared_type='char*'/>
<arg type='i' declared_type='int'/>
<arg type='^*' declared_type='char**'/>
<arg type='I' declared_type='mkd_flag_t'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_mmiot_flags'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*'/>
<arg type='^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}' declared_type='MMIOT*'/>
<arg type='i' declared_type='int'/>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_prepare_tags'>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_ref_prefix'>
<arg type='^{document=i^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}{?=^{line}^{line}}^{paragraph=^{paragraph}^{paragraph}^{line}*iii}iii*^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}{callback_data=^v^?^?^?}}' declared_type='Document*'/>
<arg type='*' declared_type='char*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_search_tags'>
<arg type='*' declared_type='char*'/>
<arg type='i' declared_type='int'/>
<retval type='^{kw=*ii}' declared_type='struct kw*'/>
</function>
<function name='mkd_shlib_destructor'>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_sort_tags'>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_string'>
<arg const='true' type='*' declared_type='char*'/>
<arg type='i' declared_type='int'/>
<arg type='I' declared_type='unsigned int'/>
<retval type='^{document=i^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}^{line={_Cstring=*ii}^{line}iiii}{?=^{line}^{line}}^{paragraph=^{paragraph}^{paragraph}^{line}*iii}iii*^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}{callback_data=^v^?^?^?}}' declared_type='Document*'/>
</function>
<function name='mkd_string_to_anchor'>
<arg type='*' declared_type='char*'/>
<arg type='i' declared_type='int'/>
<arg type='^?' function_pointer='true' declared_type='mkd_sta_function_t'>
<arg const='true' type='i' declared_type='int'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<arg type='^v' declared_type='void*'/>
<arg type='i' declared_type='int'/>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_toc'>
<arg type='^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}' declared_type='MMIOT*'/>
<arg type='^*' declared_type='char**'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_with_html5_tags'>
<retval type='v' declared_type='void'/>
</function>
<function name='mkd_xhtmlpage'>
<arg type='^{mmiot={_Cstring=*ii}{_Cstring=*ii}{_Qblock=^{block}ii}ii*^{?}I^{callback_data=^v^?^?^?}}' declared_type='MMIOT*'/>
<arg type='i' declared_type='int'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*'/>
<retval type='i' declared_type='int'/>
</function>
<function name='mkd_xml'>
<arg type='*' declared_type='char*'/>
<arg type='i' declared_type='int'/>
<arg type='^*' declared_type='char**'/>
<retval type='i' declared_type='int'/>
</function>
<function_alias original='mkd_generatecss' name='mkd_style'/>
<function_alias original='mkd_generateline' name='mkd_text'/>
<class name='GHMarkdownParser'>
<method class_method='true' selector='HTMLStringFromMarkdownString:'>
<arg type='@' index='0' declared_type='NSString*' name='markdownString'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='flavoredHTMLStringFromMarkdownString:'>
<arg type='@' index='0' declared_type='NSString*' name='markdownString'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSString'>
<method selector='HTMLStringFromMarkdown'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='flavoredHTMLStringFromMarkdown'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
</signatures>
